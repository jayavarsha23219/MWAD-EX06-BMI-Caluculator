# Ex06 BMI Calculator
## Date: 20:05:2025

## AIM
To create a BMI calculator using React Router 

## ALGORITHM
### STEP 1 State Initialization
Manage the current page (Home or Calculator) using React Router.

### STEP 2 User Input
Accept weight and height inputs from the user.

### STEP 3 BMI Calculation
Calculate the BMI based on user input.

### STEP 4 Categorization
Classify the BMI result into categories (Underweight, Normal weight, Overweight, Obesity).

### STEP 5 Navigation
Navigate between pages using React Router.

## PROGRAM
App.jsx
```
import React, { useState } from "react";
import "./App.css";

function App() {
  const [weight, setWeight] = useState("");
  const [height, setHeight] = useState("");
  const [bmi, setBmi] = useState(null);
  const [category, setCategory] = useState("");

  const calculateBMI = () => {
    if (weight && height) {
      const heightInMeters = height / 100;
      const bmiValue = (weight / (heightInMeters * heightInMeters)).toFixed(2);
      setBmi(bmiValue);

      if (bmiValue < 18.5) setCategory("Underweight");
      else if (bmiValue < 25) setCategory("Normal weight");
      else if (bmiValue < 30) setCategory("Overweight");
      else setCategory("Obesity");
    }
  };

  const reset = () => {
    setWeight("");
    setHeight("");
    setBmi(null);
    setCategory("");
  };

  return (
    <div className="container">
      <h1>BMI Calculator</h1>
      <div className="card">
        <div className="input-group">
          <label>Weight (kg):</label>
          <input
            type="number"
            value={weight}
            onChange={(e) => setWeight(e.target.value)}
          />
        </div>
        <div className="input-group">
          <label>Height (cm):</label>
          <input
            type="number"
            value={height}
            onChange={(e) => setHeight(e.target.value)}
          />
        </div>
        <div className="buttons">
          <button className="btn calculate" onClick={calculateBMI}>Calculate</button>
          <button className="btn reset" onClick={reset}>Reset</button>
        </div>
        {bmi && (
          <div className="result">
            <h2>Your BMI: {bmi}</h2>
            <p className={`category ${category.toLowerCase().replace(" ", "-")}`}>
              Category: {category}
            </p>
          </div>
        )}
      </div>
    </div>
  );
}

export default App;
```
App.css
```
* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
  background: linear-gradient(to right, #89f7fe, #66a6ff);
  min-height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
}

.container {
  width: 100%;
  max-width: 400px;
  background-color: #ffffff;
  padding: 30px;
  border-radius: 12px;
  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
  text-align: center;
}

.container h1 {
  margin-bottom: 20px;
  color: #333;
}

.card {
  display: flex;
  flex-direction: column;
  gap: 20px;
}

.input-group {
  text-align: left;
}

.input-group label {
  font-weight: 600;
  margin-bottom: 6px;
  display: block;
  color: #444;
}

.input-group input {
  width: 100%;
  padding: 10px;
  font-size: 1rem;
  border: 1px solid #ddd;
  border-radius: 6px;
  transition: border-color 0.3s;
}

.input-group input:focus {
  border-color: #66a6ff;
  outline: none;
}

/* Buttons container */
.buttons {
  display: flex;
  justify-content: space-between;
  gap: 10px;
}

.btn {
  flex: 1;
  padding: 10px;
  font-size: 1rem;
  border: none;
  border-radius: 6px;
  cursor: pointer;
  transition: background-color 0.3s;
  color: #fff;
}

.calculate {
  background-color: #007bff;
}

.calculate:hover {
  background-color: #0056b3;
}

.reset {
  background-color: #dc3545;
}

.reset:hover {
  background-color: #b02a37;
}

/* Result section */
.result {
  margin-top: 20px;
}

.result h2 {
  font-size: 1.5rem;
  color: #222;
}

.category {
  font-weight: bold;
  font-size: 1.1rem;
  margin-top: 10px;
}

/* Category colors */
.category.underweight {
  color: #ffa500;
}

.category.normal-weight {
  color: #28a745;
}

.category.overweight {
  color: #ffc107;
}

.category.obesity {
  color: #dc3545;
}

/* Responsive tweaks */
@media (max-width: 480px) {
  .container {
    margin: 20px;
    padding: 20px;
  }

  .buttons {
    flex-direction: column;
  }
}

```

## OUTPUT
vvvv

## RESULT
The program for creating BMI Calculator using React Router is executed successfully.
